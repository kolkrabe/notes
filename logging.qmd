---
title: "Logging"
editor: visual
format: html
code-block-bg: dark
---

# Syslog

#### General Notes

-   Used to manage system logs and alerts
-   Can be stored locally, sent to vty, console lines, or forwarded to an external syslog server
-   Logging levels: (Every Awesome Cisco Engineer Will Need Icecream Daily )
    -   Emergency: **0**
    -   Alert: **1**
    -   Critical: **2**
    -   Error: **3**
    -   Warning: **4**
    -   Notice: **5**
    -   Informational: **6**
    -   Debug: **7**

------------------------------------------------------------------------

### Conditional Debugging

Conditions can be configured to reduce the output you see when debugging. These conditions can be nested (set interlace condition, then set IP/Mac condition for eg.)

#### Useful show commands

-   `show logging` â€” Shows information on local and external syslog

------------------------------------------------------------------------

#### Standard Syslog Config

``` default
logging buffered 90000        # Increase local logging buffer size
logging <logging-server>
service timestamps debug datetime localtime show-timezone msec
service timestamps log datetime localtime show-timezone msec
logging trap warning         # includes this level of message and all lower levels
logging source-interface loopback0
exit
```

#### Standard timestamp config

``` default
#service timestamps [debug|log] [datetime|uptime]

*Datetime - includes date and time
*Uptime - time elapsed since last reboot
```

#### Show Sequence Numbers

``` default
conf t
service sequence-numbers

! shows sequence numbers in log which allows you to differenciate between 2 events that happened simultaneously.
```

#### Conditional Debugging

``` default
debug condition mac 1111.1111.1111                  ! this debugs based on the mac specified
debug condition start                               ! starts conditional debugging
!
show condition                                      ! displays the current conditions set
show debug
!
no debug condition interface g0/2                   ! this removes the condition
no debug all                                        ! stops debugging however does not remove conditions
```
